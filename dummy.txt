using "lib/include.txt"

define {screenMap}=H'0400
define {colorMap}=H'D800
define {line}=40
define {brick}=102
define {green}=5

number MyFavouriteNumber
number EurHufExchangeRate
number IsGreetingPrinted
string TheWeatherToday
number Position

struct Product 100
    Name ""
    Type ""
    Quantity 0
---

struct Customer 100
    Name ""
    Address ""
---

struct PokerPlayer 4
    Name ""
    Cards1 (2)
    Cards2 (2)
---

enum Car Ford,Toyota,BMW,AlphaRomeo
number car

@start:
    # *** START ***
    PRINT "START THE PROGRAM"
    GOTO @main:
@helloWorld:
    # *** GREETINGS TEXT ***
    PRINT "HELLO WORLD"
    RETURN
@greetings:
    # *** GREETINGS TEXT ***
    PRINT "HELLO C64"
    RETURN

@main:
    # *** START THE MAIN ***
    PRINT "START THE MAIN"
    GOSUB @helloWorld:
    MyFavouriteNumber=7
    PRINT "MY FAV NUMBER IS ",MyFavouriteNumber
    EurHufExchangeRate=394.35
    PRINT "HUF/EUR IS ",EurHufExchangeRate
    TheWeatherToday="SUNNY"
    PRINT "THE WEATHER IS ",TheWeatherToday," TODAY."
    IsGreetingPrinted=1
    IF IsGreetingPrinted=1 THEN GOSUB @greetings:
    PRINT ""
    # *** USE DEFINES ***
    Position=13*{line}+39
    POKE {screenMap}+Position,{brick}
    POKE {colorMap}+Position,{green}
    # *** TEST INCLUDES ***
    IF IncludeWorks1=1 THEN PRINT "USING WORKS I."
    IF IncludeWorks2=2 THEN PRINT "USING WORKS II."
include "data.txt"
    N=1
    FOR X=1 TO {numOfData}:READ Q:N=N+Q:NEXT
    PRINT "SUMMARY: ",N
    ? PRINT "VISIBLE ONLY IN TEST MODE"
    ! PRINT "NOT VISIBLE IN TEST MODE"

    WHEN MyFavouriteNumber>5
    PRINT "MY FAV. NUM. > 5"
    SKIP

    WHEN MyFavouriteNumber=3
    PRINT "MY FAV. NUM. = 3"
    SKIP

    # SPACE TO CONTINUE
    PRINT "PRESS SPACE TO CONTIONUE!"

define {keyInput}=197
define {keySpace}=60

@Wait:
    P=PEEK({keyInput})
    IF P<>{keySpace} THEN GOTO @Wait:

    # *** TEST STRUCTURES ***
ref products
ref product
ref customer
    DIM products(3)

    WITH P Product
    WITH C Customer

    X=0
    NEW Product AS product
    P.Name(product)="APPLE"
    P.Type(product)="FRUITS"
    P.Quantity(product)=3000
    products(X) = product

    X=X+1
    NEW Product AS product
    P.Name(product)="TOMATO"
    P.Type(product)="VEGETABLES"
    P.Quantity(product)=500
    products(X) = product

    X=X+1
    NEW Product AS product
    P.Name(product)="ONION"
    P.Type(product)="VEGETABLES"
    P.Quantity(product)=700
    products(X) = product
    
    PRINT "LIST OF PRODUCTS:"
    FOR X=0 TO 2
    product=products(X)
    PRINT " - "+P.Name(product)
    PRINT "   TYPE: "+P.Type(product)
    PRINT "   QUANTITY: ",P.Quantity(product)
    NEXT    

    NEW Customer AS customer
    C.Name(customer)="HARVEY SUTTON"
    C.Address(customer)="54336 NEWCASTLE"

    PRINT "LAST CUSTOMER:"
    PRINT "  - "+C.Name(customer)
    PRINT "       ADDRESS: "+C.Address(customer)

    # *** DESTROY/CLEAR STRUCTURES ***
    FOR X=0 TO 2
    FREE Product products(X)
    NEXT
    
    FREE Customer customer

    # *** CHECK IF OBJECTS EXIST ***
    FOR X=0 TO 2
    WHEN P.$(X)=0
    PRINT X
    PRINT "  THE PRODUCT OBJ. HAS BEEN CLEARED"
    SKIP
    NEXT

    WHEN C.$(customer)=0
    PRINT "THE LAST CUSTOMER OBJ. HAS BEEN CLEARED"
    SKIP
    CLRWITH

    PRINT "PRESS SPACE TO CONTIONUE!"
@Wait2:
    P=PEEK({keyInput})
    IF P<>{keySpace} THEN GOTO @Wait2:

    # *** TEST ARR PROPS IN STRUCT ***
ref player
    NEW PokerPlayer AS player

    WITH P PokerPlayer
    P.Name(player)="SAM MAY"
    
    P.Cards1(player,0)=7
    P.Cards2(player,0)=1
    
    P.Cards1(player,1)=12
    P.Cards2(player,1)=4

    

string CardNums
string CardSuites
    CardNums="00 2 3 4 5 6 7 8 910 J Q K A"
    CardSuites=CHR$(97)+CHR$(115)+CHR$(120)+CHR$(122)
number CardNum
number CardSuit
    PRINT P.Name(player)+"'S POKER CARDS:" 
    CardNum=P.Cards1(player,0) : CardSuit=P.Cards2(player,0)
    PRINT "  "+MID$(CardSuites,CardSuit,1)+MID$(CardNums,CardNum*2,2)
    CardNum=P.Cards1(player,1) : CardSuit=P.Cards2(player,1)
    PRINT "  "+MID$(CardSuites,CardSuit,1)+MID$(CardNums,CardNum*2,2)
    CLRWITH

    PRINT "PRESS SPACE TO CONTIONUE!"
@Wait3:
    P=PEEK({keyInput})
    IF P<>{keySpace} THEN GOTO @Wait3:

    # *** HEXA AND BINARY NUMBERS ***
    A=B'10101001 : B=b'0110
    PRINT "BIN 10101001 = "+STR$(A)
    PRINT "BIN 0110 = "+STR$(B)
    A=h'A8 : B=H'D020
    PRINT "HEX A8 = "+STR$(A)
    PRINT "HEX D020 = "+STR$(B)


    PRINT "PRESS SPACE TO CONTIONUE!"
@Wait4:
    P=PEEK({keyInput})
    IF P<>{keySpace} THEN GOTO @Wait4:
    GOTO @MethodCallExample:

number Num2
number Num
string Method

METHOD Calculate Num,Num2,Method
    # METHOD/CALL EXAMPLE
    WHEN Method="+"
        Num=Num+Num2
        RETURN
    SKIP
    WHEN Method="-"
        Num=Num-Num2
        RETURN
    SKIP
    WHEN Method="*"
        Num=Num*Num2
        RETURN
    SKIP
    WHEN Method="/"
        Num=Num/Num2
        RETURN
    SKIP
    WHEN Method="C"
        Num=0
        RETURN
    SKIP
    WHEN Method="MINUS"
        Num=-Num
        RETURN
    SKIP
    WHEN Method="INV"
        Num=1/Num
        RETURN
    SKIP
    # OTHER CASE IS A SIMPLE SET
    Num=Num2
    RETURN

@MethodCallExample:

    CALL Calculate 0,12,"+"
    CALL Calculate Num,2,"-"
    CALL Calculate Num,3,"*"
    CALL Calculate Num,10,"/"
    PRINT "CALC VALUE IS "+STR$(Num)

    WITH C Car
    car = C.Ford
    
    WHEN car=C.AlphaRomeo
    PRINT "ALPHAROMEO, ITALY" : GOTO @endCase:
    SKIP
    WHEN car=C.Ford
    PRINT "FORD, USA" : GOTO @endCase:
    SKIP
    WHEN car=C.Toyota
    PRINT "TOYOTA, JAPAN" : GOTO @endCase:
    SKIP
    WHEN car=C.BMW
    PRINT "BMW, GERMANY"
    SKIP
@endCase:
    :
    CLRWITH

    # *** END ***
